@using Sidekick.Common.Settings

<MudSelect Value="@PreferredWiki"
           ValueChanged="(string? v) => PreferredChanged(v)"
           T="string?"
           Label="@Resources.Wiki_Preferred"
           Variant="Variant.Filled">
    @foreach (var option in WikiOptions)
    {
        <MudSelectItem Value="@option.Key.ToString()">@option.Value</MudSelectItem>
    }
</MudSelect>

@inject SettingsResources Resources
@inject ISettingsService SettingsService

@code {

    private string? PreferredWiki { get; set; }

    private Dictionary<WikiSetting, string> WikiOptions { get; } = new()
    {
        { WikiSetting.PoeWiki, "poewiki.net" },
        { WikiSetting.PoeDb, "poedb.tw" }
    };

    protected override async Task OnInitializedAsync()
    {
        PreferredWiki = (await SettingsService.GetEnum<WikiSetting>(SettingKeys.PreferredWiki) ?? WikiSetting.PoeWiki).ToString();
        await base.OnInitializedAsync();
    }

    private async Task PreferredChanged(string? value)
    {
        PreferredWiki = value;
        await SettingsService.Set(SettingKeys.PreferredWiki, Enum.TryParse<WikiSetting>(value, out var enumValue) ? enumValue : WikiSetting.PoeWiki);
    }

}
