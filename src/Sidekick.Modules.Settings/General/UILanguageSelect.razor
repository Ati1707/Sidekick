@using Sidekick.Common.Localization
@using Sidekick.Modules.Settings.Localization
<MudSelect T="string?"
           Label="@Resources.Language_UI"
           Variant="Variant.Filled"
           Value="Value"
           ValueChanged="ValueChanged"
           Required="true"
           RequiredError="Language is required!">
    @foreach (var option in Options)
    {
        <MudSelectItem Value="@option.Key">@option.Value</MudSelectItem>
    }
</MudSelect>

@inject SettingsResources Resources
@inject IUiLanguageProvider UILanguageProvider

@code {

    [Parameter]
    public string? Value { get; set; }

    [Parameter]
    public EventCallback<string?> ValueChanged { get; set; }

    private Dictionary<string, string> Options { get; set; } = new Dictionary<string, string>();

    protected override async Task OnInitializedAsync()
    {
        var languages = UILanguageProvider.GetList();
        Options = languages.ToDictionary(
            x => x.Name,
            x => x
                 .NativeName.First()
                 .ToString()
                 .ToUpper()
                 + x.NativeName[1..]);

        await base.OnInitializedAsync();
    }

}
