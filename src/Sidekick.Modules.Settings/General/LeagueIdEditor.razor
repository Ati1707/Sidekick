@using Sidekick.Common.Settings
<FormSelect Label="@Resources.Character_League"
            Value="@LeagueId"
            ValueChanged="LeagueChanged"
            Options="Options"/>

@inject SettingsResources Resources
@inject ISettingsService SettingsService
@inject ILeagueProvider LeagueProvider

@code {

    private string? LeagueId { get; set; }

    private List<SelectOption> Options { get; set; } =
    [
    ];

    protected override async Task OnInitializedAsync()
    {
        LeagueId = await SettingsService.GetString(SettingKeys.LeagueId);
        await RefreshOptions();
        await base.OnInitializedAsync();
    }

    public async Task RefreshOptions()
    {
        var leagues = await LeagueProvider.GetList(true);
        Options = leagues
                  .GroupBy(x => x.Id)
                  .Select(
                      x => new SelectOption()
                      {
                          Value = x.First()
                                   .Id,
                          Label = x.First()
                                   .Text,
                      })
                  .ToList();
    }

    private async Task LeagueChanged(string? value)
    {
        LeagueId = value;
        await SettingsService.Set(SettingKeys.LeagueId, value);
    }

}
