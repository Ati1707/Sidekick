@using Sidekick.Common.Settings
<FormSelect Label="@Resources.Language_Parser"
            Value="@Language"
            ValueChanged="LanguageChanged"
            Options="Options"/>

@inject SettingsResources Resources
@inject IGameLanguageProvider GameLanguageProvider
@inject ISettingsService SettingsService

@code {

    private string? Language { get; set; }

    private List<SelectOption> Options { get; set; } =
    [
    ];

    protected override async Task OnInitializedAsync()
    {
        Language = await SettingsService.GetString(SettingKeys.LanguageParser);
        var languages = GameLanguageProvider.GetList();
        Options = languages
                  .Select(
                      x => new SelectOption()
                      {
                          Value = x.LanguageCode,
                          Label = x.Name,
                      })
                  .ToList();

        await base.OnInitializedAsync();
    }

    private async Task LanguageChanged(string? value)
    {
        Language = value;
        await SettingsService.Set(SettingKeys.LanguageParser, value);
    }

}
