<MudText Typo="Typo.h3">Parser Logs</MudText>
<div style="height: 420px; overflow-y: scroll; ">
    @for (var index = Logs.Count - 1; index >= 0; index--)
    {
        var log = Logs[index];
        <MudAlert @key="index"
                  Class="mb-1 grey darken-4"
                  Dense="true"
                  Severity="log.Severity"
                  Variant="Variant.Outlined">
            <MudText Typo="Typo.caption">@log.Date.ToString("hh:mm:ss")</MudText><br />
            @log.Message
        </MudAlert>
    }
</div>

@inject WealthParser WealthParser
@code {
    private List<(Severity Severity, DateTime Date, String Message)> Logs { get; set; } = new();

    protected override void OnInitialized()
    {
        WealthParser.OnLogEvent += OnLogEvent;

        base.OnInitialized();
    }

    public void OnLogEvent(Severity severity, string message)
    {
        Logs.Add((severity, DateTime.Now, message));
        _ = InvokeAsync(() => { StateHasChanged(); });
    }
}
