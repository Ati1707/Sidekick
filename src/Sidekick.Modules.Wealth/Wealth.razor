@page "/wealth"
@inherits SidekickView
@using Sidekick.Modules.Wealth.Components
@if (!Settings.Enable_WealthTracker){
    <MudAlert Severity="Severity.Warning" Elevation="5">Wealth Tracker is an experimental feature and requires special privileges. Please enabled Wealth Tracker from the Settings screen.</MudAlert>
} else {
    <div class="d-flex flex-grow-1 gap-4">
        <MudPaper Class="flex-none d-flex py-8" Elevation="0" Width="650px" Height="1px;">
            <MudCard Width="100%" Height="800px">
                <MudCardContent Style="height: 100%;">
                    <WealthOverTime />
                    <WealthInventory />
                </MudCardContent>
                <MudCardActions>
                    @if (AuthenticationService.IsAuthenticated()) {
                        if (WealthParser.IsRunning()) {
                            <MudAlert Dense="true" Style="width: 205px;" Variant="Variant.Filled" Severity="Severity.Success">Parser Running</MudAlert>
                        } else {
                            <MudAlert Dense="true" Style="width: 205px;" Variant="Variant.Filled" Severity="Severity.Error">Parser Stopped</MudAlert>
                        }
                    } else {
                        <MudAlert Dense="true" Style="width: 205px;" Variant="Variant.Filled" Severity="Severity.Error">Not Authenticated</MudAlert>
                    }
                </MudCardActions>
            </MudCard>
        </MudPaper>
        <MudPaper Class="flex-none d-flex py-8" Elevation="0" Width="270px" Height="1px;">
            <MudCard Width="100%" Height="800px">
                <MudCardContent Style="height: 100%;">
                    <WealthDistribution />
                    <WealthParserLogs />
                </MudCardContent>
                <MudCardActions>
                    <MudButton Variant="Variant.Filled" Class="pr-5" Style="margin-left:100px;" Color="Color.Primary" OnClick="StartParsing">Start</MudButton>
                    <MudButton Variant="Variant.Filled" Class="pr-5" Style="margin-left:10px;" Color="Color.Primary" OnClick="StopParsing">Stop</MudButton>
                </MudCardActions>
            </MudCard>
        </MudPaper>
    </div>
}
       
@code {
    [Inject] private WealthResources Resources { get; set; }
    [Inject] private ILogger<Wealth> Logger { get; set; }
    [Inject] private WealthParser WealthParser { get; set; }
    [Inject] private WealthDbContext Database { get; set; }
    [Inject] private IAuthenticationService AuthenticationService { get; set; }
    [Inject] private ISettings Settings { get; set; }

    public override string Title => "Wealth Tracker";

    public override int ViewWidth => 1060;
    public override int ViewHeight => 1000;

    protected override void OnInitialized()
    {
        WealthParser.OnParserStopped += OnParserStopped;

        base.OnInitialized();
    }

    private async void StartParsing()
    {
        await WealthParser.Start();
        await InvokeAsync(() => { StateHasChanged(); });
    }

    private void StopParsing()
    {
        WealthParser.Stop();
        StateHasChanged();

    }

    public async void OnParserStopped(string[] obj)
    {
        await InvokeAsync(() => { StateHasChanged(); });
    }

}
