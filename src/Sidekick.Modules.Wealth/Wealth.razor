@page "/wealth"
@inherits SidekickView
@using Sidekick.Common.Errors;
@using Sidekick.Modules.Wealth.Components

<MudGrid Spacing="0">
    <MudItem xs="9" Class="pa-3">
        <WealthOverTime />
        <WealthInventory />
    </MudItem>
    <MudItem xs="3" Class="pa-3">
        <WealthDistribution />
        <WealthParserLogs />

        @if (WealthParser.IsRunning())
        {
            <MudAlert Dense="true" Style="width: 205px;" Variant="Variant.Filled" Severity="Severity.Success">Parser Running</MudAlert>
        }
        else
        {
            <MudAlert Dense="true" Style="width: 205px;" Variant="Variant.Filled" Severity="Severity.Error">Parser Stopped</MudAlert>
        }

        <MudButton Variant="Variant.Filled" Class="pr-5" Style="margin-left:100px;" Color="Color.Primary" OnClick="Start">Start</MudButton>
        <MudButton Variant="Variant.Filled" Class="pr-5" Style="margin-left:10px;" Color="Color.Primary" OnClick="Stop">Stop</MudButton>
    </MudItem>
</MudGrid>

@inject WealthParser WealthParser
@inject ISettings Settings
@code {
    public override string Title => "Wealth Tracker";

    public override int ViewWidth => 1280;

    public override int ViewHeight => 800;

    protected override void OnInitialized()
    {
        if (!Settings.Enable_WealthTracker)
        {
            NavigationManager.NavigateTo(ErrorType.DisabledModule.ToUrl("wealth"));
        }

        base.OnInitialized();
    }

    private void Start()
    {
        WealthParser.Start();
    }

    private void Stop()
    {
        WealthParser.Stop();
    }
}
