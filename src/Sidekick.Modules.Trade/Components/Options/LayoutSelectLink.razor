
<MudNavGroup Title="@Resources.Layout" Expanded="true">
    <MudNavLink OnClick="@(() => Select(Layout.Cards_Maximized))">@Resources.Layout_Cards_Maximized</MudNavLink>
    <MudNavLink OnClick="@(() => Select(Layout.Cards_Minimized))">@Resources.Layout_Cards_Minimized</MudNavLink>
</MudNavGroup>

@code {
    [Inject] private ISettings Settings { get; set; }
    [Inject] private ISettingsService SettingsService { get; set; }
    [Inject] private TradeResources Resources { get; set; }

    [Parameter] public Layout Layout { get; set; }
    [Parameter] public EventCallback<Layout> LayoutChanged { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        switch (Settings.Trade_Layout)
        {
            case nameof(Layout.Cards_Minimized): await LayoutChanged.InvokeAsync(Layout.Cards_Minimized); break;
            default: await LayoutChanged.InvokeAsync(Layout.Cards_Maximized); break;
        }
    }

    private async Task Select(Layout layout)
    {
        if (layout.ToString() != Settings.Trade_Layout)
        {
            await SettingsService.Save(nameof(ISettings.Trade_Layout), layout.ToString());
        }

        await LayoutChanged.InvokeAsync(layout);
    }
}
