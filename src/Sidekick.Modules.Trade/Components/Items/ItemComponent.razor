
<div class="item-content @WrapperClass" style="@Style" @onclick="OnClick">
    <ItemHeaderComponent Name="@Item.Original.Name"
                         Type="@Item.Original.Type"
                         Influences="Item.Influences"
                         Rarity="Item.Metadata.Rarity"
                         IsRelic="Item.Properties.IsRelic" />

    @if (Layout == Layout.Cards_Maximized || Expanded)
    {
        <MudGrid Spacing="2" Class="pt-2 px-4">
            <MudItem xs="6" Class="align-self-center">
                <div class="d-inline-block">
                    <ItemImageComponent Item="Item" />
                </div>
            </MudItem>
            <MudItem xs="6" Class="align-self-start">
                <PriceDisplay Value="(double)Item.Price.Amount" Currency="@Item.Price.Currency" />
                <MudText Typo="Typo.body2" Align="Align.Right">@Item.Price.AccountName</MudText>
                <PriceAge Date="Item.Price.Date" Align="Align.Right" />
            </MudItem>
        </MudGrid>

        <div class="pa-2">
            <ItemLineContentsComponent Item="Item" LineContents="Item.PropertyContents" />
            <ItemLineContentsComponent Item="Item" LineContents="Item.AdditionalPropertyContents" />

            <ItemProperties Item="Item" />

            @if (Item.ModifierLines != null && Item.ModifierLines.Count > 0)
            {
                <ItemSeparatorComponent Rarity="Item.Metadata.Rarity" />
                @foreach (var line in Item.ModifierLines)
                {
                    <ItemModifierLineComponent Item="Item" ModifierLine="line" />
                }
            }

            @if (!Item.Properties.Identified)
            {
                <ItemSeparatorComponent Rarity="Item.Metadata.Rarity" />
                <div class="unidentified-text">
                    <MudText Typo="Typo.body1" Align="Align.Center" Class="font-smallcaps">@Resources.Unidentified</MudText>
                </div>
            }
            @if (Item.Properties.Corrupted)
            {
                <ItemSeparatorComponent Rarity="Item.Metadata.Rarity" />
                <div class="corrupted-text">
                    <MudText Typo="Typo.body1" Align="Align.Center" Class="font-smallcaps">@Resources.Corrupted</MudText>
                </div>
            }
            @if (Item.Properties.Scourged)
            {
                <ItemSeparatorComponent Rarity="Item.Metadata.Rarity" />
                <div class="scourge-text">
                    <MudText Typo="Typo.body1" Align="Align.Center" Class="font-smallcaps">@Resources.Scourged</MudText>
                </div>
            }
            @if (!string.IsNullOrEmpty(Item.Price.Note))
            {
                <ItemSeparatorComponent Rarity="Item.Metadata.Rarity" />
                <div class="note-text">
                    <MudText Typo="Typo.body1" Align="Align.Center" Class="font-smallcaps">@Item.Price.Note</MudText>
                </div>
            }
        </div>
    }
    else
    {
        <div class="d-flex flex-row align-center justify-space-between pa-2">
            <div>
                <MudText Typo="Typo.body2" Align="Align.Left">@Item.Price.AccountName</MudText>
                <PriceAge Date="Item.Price.Date" Align="Align.Left" />
            </div>
            <PriceDisplay Value="(double)Item.Price.Amount" Currency="@Item.Price.Currency" />
        </div>
    }

    @if (Layout == Layout.Cards_Minimized)
    {
        <div class="d-flex flex-row justify-center align-center">

            @if (Expanded)
            {
                <MudIcon Color="Color.Info" Icon="@Icons.Material.Filled.ArrowDropUp" />
                <MudText Color="Color.Info" Class="font-smallcaps">@Resources.View_Less</MudText>
                <MudIcon Color="Color.Info" Icon="@Icons.Material.Filled.ArrowDropUp" />
            }
            else
            {
                <MudIcon Color="Color.Info" Icon="@Icons.Material.Filled.ArrowDropDown" />
                <MudText Color="Color.Info" Class="font-smallcaps">@Resources.View_More</MudText>
                <MudIcon Color="Color.Info" Icon="@Icons.Material.Filled.ArrowDropDown" />
            }
        </div>
    }
</div>

@code {
    [Inject] private TradeResources Resources { get; set; }

    [Parameter] public TradeItem Item { get; set; }
    [Parameter] public string Style { get; set; }
    [Parameter] public Layout Layout { get; set; }

    private bool Expanded { get; set; }

    private string WrapperClass => Layout == Layout.Cards_Minimized ? "clickable" : "";

    private void OnClick()
    {
        if (Layout == Layout.Cards_Minimized)
        {
            Expanded = !Expanded;
        }
    }
}
