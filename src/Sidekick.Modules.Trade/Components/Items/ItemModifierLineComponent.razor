@using Sidekick.Common.Game.Items
@if (ModifierLine.Modifiers.Any())
{
    var modifier = ModifierLine?.Modifiers.First();

    <div class="modifiers">
        <MudText Typo="Typo.body1" Class="modifier font-smallcaps" Align="Align.Center">
            <ItemModifierText Text="@ModifierLine.Text"
                              Category="modifier.Category" />
            @if (!string.IsNullOrWhiteSpace(modifier.Tier))
            {
                <span class="tier @GetTierClass(modifier.Tier)">@modifier.Tier</span>
            }
        </MudText>
    </div>

    if (IsLastOfCategory && (Category == ModifierCategory.Implicit || Category == ModifierCategory.Enchant))
    {
        <ItemSeparator Rarity="Item.Metadata.Rarity" />
    }
}

@code {
    [Parameter] public Item Item { get; set; }
    [Parameter] public ModifierLine ModifierLine { get; set; }

    private ModifierCategory Category => ModifierLine.Modifiers.FirstOrDefault()?.Category ?? ModifierCategory.Undefined;

    private bool IsLastOfCategory
    {
        get
        {
            var index = Item.ModifierLines.IndexOf(ModifierLine);
            var next = Item.ModifierLines.ElementAtOrDefault(index + 1);
            if (next != null && next.Modifiers.FirstOrDefault().Category == Category)
            {
                return false;
            }

            return true;
        }
    }

    private string GetTierClass(string tier) => tier.StartsWith("P") ? "prefix" : "suffix";
}
