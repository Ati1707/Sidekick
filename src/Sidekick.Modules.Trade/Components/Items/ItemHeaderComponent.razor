
<div class="header @BackgroundClass">
    <div class="influences left">
        <ItemInfluencesComponent Influences="Influences" />
    </div>
    @if (!string.IsNullOrEmpty(Name))
    {
        <MudText Typo="Typo.h6" Align="Align.Center" Class="name font-smallcaps" Style="@LabelStyle">@Name</MudText>
    }
    @if (!string.IsNullOrEmpty(Type))
    {
        <MudText Typo="Typo.h6" Align="Align.Center" Class="type font-smallcaps" Style="@LabelStyle">@Type</MudText>
    }
    <div class="influences right">
        <ItemInfluencesComponent Influences="Influences" />
    </div>
</div>

@code {
    [Parameter] public Rarity Rarity { get; set; }

    [Parameter] public string Name { get; set; }

    [Parameter] public string Type { get; set; }

    [Parameter] public Influences Influences { get; set; }

    [Parameter] public bool IsRelic { get; set; }

    private string BackgroundClass
    {
        get
        {
            if (IsRelic)
            {
                if (string.IsNullOrEmpty(Name) || string.IsNullOrEmpty(Type))
                {
                    return "header-relic";
                }
                return "header-double-relic";
            }

            switch (Rarity)
            {
                case Rarity.Currency: return "header-currency";
                case Rarity.Magic: return "header-magic";
                case Rarity.Gem: return "header-gem";
                case Rarity.Rare:
                    if (string.IsNullOrEmpty(Name) || string.IsNullOrEmpty(Type))
                    {
                        return "header-rare";
                    }
                    return "header-double-rare";
                case Rarity.Unique:
                    if (string.IsNullOrEmpty(Name) || string.IsNullOrEmpty(Type))
                    {
                        return "header-unique";
                    }
                    return "header-double-unique";
                default: return "header-normal";
            }
        }
    }

    private string LabelStyle => Rarity switch
    {
        Rarity.Currency => "color:#AA9E82;",
        Rarity.Magic => "color:#8888FF;",
        Rarity.Rare => "color:#FFFF77;",
        Rarity.Unique => "color:#AF6025;",
        Rarity.Gem => "color:#1BA29B",
        _ => "color:#C8C8C8",
    };
}
