@using Sidekick.Apis.Poe.Trade.Models
@using Sidekick.Modules.Trade.Localization
@using MudBlazor

<div class="d-flex filter">
    <div class="flex-grow-1">
        <MudCheckBox @bind-Checked="Filter.Enabled"
                     Color="Color.Primary"
                     Dense="true"
                     Size="Size.Small"
                     TriState="Filter.ValueType == FilterValueType.Boolean">
            <div class="d-flex align-center">
                <ItemPropertyText Label="@Filter.Text"
                                  Value="@Filter.Value.ToString()"
                                  OnlyShowLabel="Filter.ValueType == FilterValueType.Boolean" />
            </div>
        </MudCheckBox>
    </div>

    @if ((Filter.Enabled ?? false) && HasValueFilters)
    {
        <FilterRange @bind-Min="@Filter.Min" @bind-Max="@Filter.Max" TypeChanged="TypeChanged" />
    }
</div>

@code {
    [Inject] public TradeResources Resources { get; set; }

    [Parameter] public PropertyFilter Filter { get; set; }

    private bool HasValueFilters => Filter.ValueType == FilterValueType.Double || Filter.ValueType == FilterValueType.Int;

    private void TypeChanged(FilterRange.RangeType type)
    {
        switch (type)
        {
            case FilterRange.RangeType.Minimum:
                Filter.NormalizeMinValue();
                Filter.Max = null;
                break;
            case FilterRange.RangeType.Maximum:
                Filter.NormalizeMaxValue();
                Filter.Min = null;
                break;
            case FilterRange.RangeType.Equals:
                Filter.SetExactValue();
                break;
            case FilterRange.RangeType.Range:
                Filter.NormalizeMinValue();
                Filter.NormalizeMaxValue();
                break;
        }
    }
}
