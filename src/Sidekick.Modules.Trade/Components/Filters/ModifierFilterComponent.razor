<div class="filter">
    <div class="d-flex align-center">
        <div class="flex-grow-1">
            <MudCheckBox @bind-Checked="Filter.Enabled"
                         Color="Color.Primary"
                         Dense="true"
                         Size="Size.Small">
                <div class="d-flex align-center">
                    <ItemModifierText Text="@Filter.Line.Text"
                                      Category="Filter.Line.Modifiers.FirstOrDefault().Category" />

                </div>
            </MudCheckBox>
        </div>

        <div>
            @if (Filter.Enabled == true && Filter.Line.HasValues)
            {
                <FilterRange @bind-Min="Filter.Min" @bind-Max="Filter.Max" TypeChanged="TypeChanged" />
            }

            @if (Filter.Enabled == true && Filter.HasMoreThanOneCategory && Filter.FirstCategory != ModifierCategory.Explicit)
            {
                <MudTooltip Text="@Resources.ForceCategory" Style="max-width: 25rem;">
                    <ItemModifierCategoryChip Category="Filter.FirstCategory"
                                              Checked="Filter.ForceFirstCategory"
                                              ShowCheckbox="true"
                                              OnClick="() => Filter.ForceFirstCategory = !Filter.ForceFirstCategory" />
                </MudTooltip>
            }
        </div>

        @if (EnchantmentOilNames?.Any() == true)
        {
            <OilAnointment OilNames="EnchantmentOilNames" />
        }
    </div>
</div>

@code {
    [Inject]
    public TradeResources Resources { get; set; }

    [Inject]
    private IPoeWikiClient PoeWikiClient { get; set; }

    [Parameter]
    public ModifierFilter Filter { get; set; }

    private List<string> EnchantmentOilNames { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Filter.Line.Modifiers.FirstOrDefault().Category == ModifierCategory.Enchant && PoeWikiClient.IsEnabled)
        {
            var oilMetadataIds = await PoeWikiClient.GetOilsMetadataIdsFromEnchantment(Filter.Line);
            if (oilMetadataIds != null)
            {
                EnchantmentOilNames = oilMetadataIds.Select(x => PoeWikiClient.BlightOilNamesByMetadataIds[x]).ToList();
            }
        }
    }

    private void TypeChanged(FilterRange.RangeType type)
    {
        switch (type)
        {
            case FilterRange.RangeType.Minimum:
                Filter.NormalizeMinValue();
                Filter.Max = null;
                break;
            case FilterRange.RangeType.Maximum:
                Filter.NormalizeMaxValue();
                Filter.Min = null;
                break;
            case FilterRange.RangeType.Equals:
                Filter.SetExactValue();
                break;
            case FilterRange.RangeType.Range:
                Filter.NormalizeMinValue();
                Filter.NormalizeMaxValue();
                break;
        }
    }
}
