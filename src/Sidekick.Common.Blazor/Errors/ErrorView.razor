@page "/error/{type}"
@page "/error/{type}/{additionalInformation}"
@using Sidekick.Common.Errors;
@using Sidekick.Common.Extensions;
@layout ModalLayout
@inherits SidekickView

<div class="d-flex justify-center pa-8">
    <MudAlert Severity="Severity.Error" Variant="Variant.Filled">
        @if (!string.IsNullOrEmpty(DisabledModuleButton))
        {
            <div class="d-flex align-center flex-nowrap">
                <div>@Text</div>
                <MudButton Variant="Variant.Text" Color="Color.Default" Size="Size.Large" Href="@DisabledModuleButton">@Resources.OpenSettings</MudButton>
            </div>
        }
        else
        {
            @Text
            @if (!string.IsNullOrEmpty(AdditionalInformation))
            {
                <div class="mt-3">
                    @Resources.AdditionalInformation <b>@AdditionalInformation.DecodeBase64Url()</b>
                </div>
            }
        }
    </MudAlert>
</div>

<div class="d-flex justify-center">
    <MudButton Variant="Variant.Text"
               Color="Color.Primary"
               OnClick="Close">
        @Resources.Close
    </MudButton>
</div>

@inject ErrorResources Resources;
@code {
    [Parameter]
    public string? Type { get; set; }

    [Parameter]
    public string? AdditionalInformation { get; set; }

    public override string Title => Resources.Title;
    public override SidekickViewType ViewType => SidekickViewType.Modal;

    private string Text => Enum.Parse<ErrorType>(Type ?? ErrorType.Unknown.ToString()) switch
    {
        ErrorType.InvalidItem => Resources.InvalidItemError,
        ErrorType.UnavailableTranslation => Resources.AvailableInEnglishError,
        ErrorType.Unparsable => Resources.ParserError,
        ErrorType.ApiError => Resources.ApiError,
        ErrorType.AlreadyRunning => Resources.AlreadyRunning,
        ErrorType.DisabledModule => Resources.DisabledModule,
        _ => Resources.Error,
    };

    private string? DisabledModuleButton => Enum.Parse<ErrorType>(Type ?? ErrorType.Unknown.ToString()) switch
    {
        ErrorType.DisabledModule => $"/settings/{AdditionalInformation}",
        _ => null,
    };
}
